
@{
    ViewData["Title"] = "ItemCode_Management";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<html>
<head>
    <style>

    </style>


</head>
<body>



    <div class="container-fluid">
        <div class="row justify-content-center m-4">
            <h1><b> Itemcode Master List   </b> </h1>
        </div>


        <div class="row justify-content-center">
            <div class="col-8">

                <div class="card rounded shadow-lg m-auto ">
                    <div class="card-header modal-o-bg shadow-sm   ">
                        <h3><b>Select    ItemCatagory  </b></h3>
                    </div>

                    <div class="card-body">
                        <div class="row justify-content-center">


                            <div class="col-5">
                                <div class="form-group">
                                    <label for="exampleInputEmail1">  ItemCatagory Type :</label>
                                    @Html.DropDownList("DDL_CategoryType", new SelectList("", ""), new { @id = "DDL_CategoryType", @class = "custom-select w-100" })

                                </div>

                            </div>



                            <div class="col-5">
                                <div class="form-group">
                                    <label for="exampleInputEmail1">  ItemCatagory :</label>
                                    @Html.DropDownList("DDL_Category", new SelectList("", ""), new { @id = "DDL_Category", @class = "custom-select w-100" })

                                </div>

                            </div>

                        </div>                     


                    </div>
                </div>
            </div>
        </div>

        <br />

        <div class="row justify-content-center m-auto" id="Table_Display">

            <div class="col-12">

                <div class="card rounded  shadow-lg">

                    <div class="card-header  modal-o-bg shadow-sm  ">
                        <h3><b>   <label id="LB_Name" class="text-white"></label>  </b> </h3>

                    </div>

                    <div class="card-body">
                   
                        <div class="row justify-content-center m-2">
                            <div class="col-11 overflow-auto">
                                <table class="table table-sm table-bordered table-striped " style="font-size:small; color:black; width:100%; background-color:#fff;" id="MyTable">
                                    <thead class="bg-light">
                                        <tr>
                                            @*<td>Edit</td>*@
                                            <th class="text-wrap text-center"><h6>ItemCode</h6>  </th>
                                            <th class="text-wrap text-center"><h6>ItemName</h6>  </th>
                                            <th class="text-wrap text-center"><h6>Question</h6>  </th>
                                            <th class="text-wrap text-center"><h6>Answer</h6>  </th>
                                            <th class="text-wrap text-center"><h6>Display</h6>  </th>
                                            <th class="text-wrap text-center"><h6>Time</h6> </th>

                                            <th class="text-wrap text-center">
                                                <button type="button" class="btn btn-success w-auto text-nowrap btn_response" id="BTN_NEW"
                                                        onclick="Modal_setup('new','','','')">
                                                    <i class="fas fa-plus"></i> <span>New Item </span>
                                                </button>
                               


                                            </th>
                                        </tr>


                                    </thead>
                                </table>
                            </div>

                        </div>


                    </div>
                </div>



            </div>




        </div>


    </div>





    <div class="modal hide fade" id="Modal_Management" tabindex="-1" data-focus-on="input:first">
        <div class="modal-dialog ">

            <div class="modal-content border border-dark shadow shadow-lg rounded ">
                <div class="modal-header  modal-o-bg shadow-sm  ">
                    <h4 class="modal-title "><label id="LB_title" class="text-white"></label></h4>

                    <button type="button" class="close" data-dismiss="modal">&times;</button>



                </div>
                <div class="modal-body">
                    <div class="row justify-content-center m-2">
                        <div class="col-4 text-left">
                            ItemCode :
                        </div>
                        <div class="col-6 text-left">
                            <input type="text" class="form-control" id="TB_ItemCode" maxlength="6" />
                        </div>

                    </div>
                    <div class="row justify-content-center m-2">
                        <div class="col-4 text-left">
                            ItemName :
                        </div>
                        <div class="col-6">
                            <input type="text" class="form-control" id="TB_ItemName" maxlength="50" />
                        </div>
                    </div>



                    <div class="row justify-content-center m-2">
                        <div class="col-4 text-left">
                            Item limit :
                        </div>
                        <div class="col-2">
                            <input type="text" class="form-control" oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');" maxlength="4" id="TB_Time" />
                        </div>
                        <div class="col-4">
                            <label class="text-danger">
                                <b> Minutes </b>
                            </label>

                        </div>
                        <div class="row justify-content-center m-2">
                            <div class="col-4 text-left">
                                Code Question :
                            </div>
                            <div class="col-6">
                                <input type="text" class="form-control w-100 " id="TB_Code_Question" maxlength="6" />
                            </div>

                        </div>
                        <div class="row justify-content-center m-2">
                            <div class="col-4 text-left">
                                Code Answer :
                            </div>
                            <div class="col-6">
                                <input type="text" class="form-control w-100" id="TB_Code_Answer" maxlength="6" />
                            </div>

                        </div>

                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-success btn_response" id="BTN_ModalSubmit" onclick=" Job_query()"><i class="fas fa-check"></i> Submit</button>
                </div>
            </div>
        </div>
    </div>




    @section Scripts
{
        <script src="~/lib/summernote/dist/Bootstrap_4_4_1.js"></script>
        <link href="~/lib/summernote/dist/summernote-bs4.css" rel="stylesheet" />
        <script src="~/lib/summernote/dist/summernote-bs4.js"></script>


        <script src="~/lib/CustomJS/Exam/CommonJS.js"></script>
        <script src="~/lib/CustomJS/Exam/Create_Exam.js"></script>
        <link href="~/lib/bootstrap/css/bootstrap4-toggle.css" rel="stylesheet" />
        <script src="~/lib/bootstrap/js/bootstrap4-toggle.js"></script>
        <link href="~/lib/DataTables/css/dataTables.bootstrap4.min.css" rel="stylesheet" />
        <link href="~/lib/DataTables/css/colReorder.bootstrap4.min.css" rel="stylesheet" />
        <link href="~/lib/DataTables/css/fixedColumns.bootstrap4.min.css" rel="stylesheet" />
        <link href="~/lib/DataTables/css/fixedHeader.bootstrap4.min.css" rel="stylesheet" />
        <link href="~/lib/DataTables/css/keyTable.bootstrap4.min.css" rel="stylesheet" />
        <link href="~/lib/DataTables/css/responsive.bootstrap4.min.css" rel="stylesheet" />
        <link href="~/lib/DataTables/css/rowGroup.bootstrap4.min.css" rel="stylesheet" />
        <link href="~/lib/DataTables/css/rowReorder.bootstrap4.min.css" rel="stylesheet" />
        <link href="~/lib/DataTables/css/scroller.bootstrap4.min.css" rel="stylesheet" />
        <link href="~/lib/DataTables/css/select.bootstrap4.min.css" rel="stylesheet" />
        <link href="~/lib/DataTables/css/buttons.bootstrap4.min.css" rel="stylesheet" />
        <link href="~/lib/DataTables/css/buttons.dataTables.min.css" rel="stylesheet" />

        <script src="~/lib/DataTables/js/jquery.dataTables.min.js"></script>
        <script src="~/lib/DataTables/js/dataTables.bootstrap4.min.js"></script>
        <script src="~/lib/DataTables/js/dataTables.colReorder.min.js"></script>
        <script src="~/lib/DataTables/js/dataTables.fixedHeader.min.js"></script>
        <script src="~/lib/DataTables/js/dataTables.keyTable.min.js"></script>
        <script src="~/lib/DataTables/js/dataTables.responsive.min.js"></script>
        <script src="~/lib/DataTables/js/responsive.bootstrap4.min.js"></script>
        <script src="~/lib/DataTables/js/dataTables.rowGroup.min.js"></script>
        <script src="~/lib/DataTables/js/dataTables.rowReorder.min.js"></script>
        <script src="~/lib/DataTables/js/dataTables.scroller.min.js"></script>
        <script src="~/lib/DataTables/js/dataTables.select.min.js"></script>
        <script src="~/lib/DataTables/js/dataTables.buttons.min.js"></script>
        <script src="~/lib/DataTables/js/buttons.bootstrap.min.js"></script>
        <script src="~/lib/DataTables/js/buttons.flash.min.js"></script>
        <script src="~/lib/DataTables/js/buttons.html5.min.js"></script>
        <script src="~/lib/DataTables/js/buttons.print.min.js"></script>



        <script>

            var OP_UPD;
            var ItemCateg;
            var ItemCategType;
            var TableTarget;
            var DisplayOrder;
            var Nbr;
            var Job;
            var ValueCodeQuestion
            var ValueCodeAnswer


            $(document).ready(function () {
                CheckRole()
                OP_UPD = '@User.Identity.Name';
              //  GetExamCategory_();
                GetExamCategory_Type();

                $("#Table_Display").hide();

            });

            function clearFields(fieldid) {
                var container, inputs, index;

                container = document.getElementById(fieldid);
                inputs = container.getElementsByTagName('input');
                for (index = 0; index < inputs.length; ++index) {
                    if (inputs[index].type == "text")
                        inputs[index].value = '';
                };
            };



            function CheckValue_NotNull(fieldid) {
                var container, inputs, index;

                container = document.getElementById(fieldid);
                inputs = container.getElementsByTagName('input');
                for (index = 0; index < inputs.length; ++index) {
                    if (inputs[index].type == "text") {
                        debugger
                        if (inputs[index].value == '')
                        {
                            Swal.fire({
                                icon: 'error',
                                title: 'Oops...',
                                text: 'Please complete all information.!',

                            })

                            return false;

                        }
                    }

                };
            };



            function CheckRole() {
                if ( '@User.IsInRole("Admin")' != "True") {
                    window.location.href = "@Url.Action("index", "home")";
                }
            };




            function Modal_setup(Job_, ItemCode, ItemName, time, Code_Question, Code_Answer) {

                //Clear data input in modal

                Job = Job_;

                clearFields('Modal_Management');

                // Inseart data to text box when job is upd
                if (Job == "upd") {
                    $('#TB_ItemCode').val(ItemCode);
                    $('#TB_ItemName').val(ItemName);
                    $('#TB_Time').val(time);
                    $('#TB_Code_Question').val(Code_Question);
                    $('#TB_Code_Answer').val(Code_Answer);

                    $('#LB_title').text('Update Item');
                } else {
                    $('#LB_title').text('New Item');
                    Nbr = 0
                }


                $("#Modal_Management").modal('show');

            };




                function Job_query() {
                      //  Item_management(string Job, string ItemCateg, string ItemCode, string ItemName, int time, int Nbr, string OPID)

                    ItemCode = $('#TB_ItemCode').val();
                    ItemName = $('#TB_ItemName').val();
                    time = $('#TB_Time').val();
                   ValueCodeQuestion = $('#TB_Code_Question').val();
                   ValueCodeAnswer = $('#TB_Code_Answer').val();
                    var Message;
                    if (Job == "new") {
                        Message = "Insert Data";
                    } else {
                        Message = "Update Data";
                    }


                    if (CheckValue_NotNull('Modal_Management') == false) return false;
                    debugger
                    Swal.fire({
                        icon: 'warning',
                        title: 'Are you sure?',
                        text: "Are you sure you want to " + Message+" Itemcode ?",
                        type: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Yes, Do it!'

                    }).then(function (result) {
                        if (result.value) {


                            $.ajax({
                                type: 'POST',
                                url: '../ItemCodeMaster/Item_management',
                                dataType: 'json',
                                data: { Job: Job, ItemCateg: ItemCateg, ItemCode: ItemCode, ItemName: ItemName, time: time, Nbr: Nbr, OPID: OP_UPD, ValueCodeQuestion: ValueCodeQuestion, ValueCodeAnswer: ValueCodeAnswer},
                                success: function (response) {
                                    if (response.success == true) {
                                        Swal.fire({
                                            position: 'top-mid',
                                            icon: 'success',
                                            title: (Message +" item  success "),
                                            showConfirmButton: true,
                                            //   timer: 1700
                                        }).then(function (result) {
                                            MakeTable_ItemCode(ItemCateg)
                                            clearFields('Modal_Management');
                                        });
                                    } else {
                                        Swal.fire({
                                            icon: 'error',
                                            title: 'Oops...',
                                            text: response.ms ,

                                        })

                                    }
                                }
                            });

                        }
                    });


                };






            function MakeTable_ItemCode(ItemCateg) {

                TableTarget = $("#MyTable").DataTable()

                if (TableTarget != null) {
                    TableTarget.destroy();
                }
                TableTarget = $("#MyTable").DataTable({
                   searching: false,
                    ordering: false,
                    serverSide: true,
                      processing: true,
              cache: true,
                                ajax: ({
                                    type: "post",
                                    url: "../ItemCodeMaster/ItemCode_TableDetail",
                                    dataSrc: "data",
                                    data: { ItemCateg: ItemCateg },
                                    dataType: "json",

                                }),

                    columns: [


                        { data: "itemCode", name: "itemCode", class: "text-wrap text-center  " },
                        { data: "itemName", name: "itemName", class: "text-wrap text-center " },
                        { data: "valueCodeQuestion", name: "valueCodeQuestion", class: "text-wrap text-center" },
                        { data: "valueCodeAnswer", name: "valueCodeAnswer", class: "text-wrap text-center " },
                        { data: "displayOrder", name: "displayOrder", class: "text-wrap text-center " },
                        { data: "timeLimit", name: "timeLimit", class: "text-wrap text-center" },
                        {

                            data: null,
                            render: function (data, type, row) {
                                var itemCode = row.itemCode.trim();
                                var itemName = row.itemName.trim();
                                var timeLimit = row.timeLimit;
                                var nbr = row.nbr;
                                var valueCodeQuestion = row.valueCodeQuestion;
                                var valueCodeAnswer = row.valueCodeAnswer;


                                return "<div class='row justify-content-center'>" +
                                    "<div class='col-4'> <a href='#' class='btn_response btn btn-info btn-sm  w-100 text-white text-nowrap '  onclick=EditItem('" + encodeURIComponent(itemCode) + "','" + encodeURIComponent(itemName) + "','" + timeLimit + "','" + nbr + "','" + encodeURIComponent(valueCodeQuestion) + "','" + encodeURIComponent(valueCodeAnswer) + "') ><i class='fas fa-pencil-alt'></i> Edit</a> </div> " +
                                    "<div class='col-4'><a href='#' class='btn_response btn btn-danger btn-sm  w-100 text-white text-nowrap '  onclick=DeleteItemCode('" + nbr + "') ><i class='fas fa-trash-alt'></i> Delete </a> </div>" +
                                    "</div>";

                            }, class: "text-wrap text-center"
                        },
                         



                    ],

                    });




            };


            function EditItem(itemCode, itemName, timeLimit, nbr,CodeQuestion,CodeAnswer) {

                Nbr = nbr

                Modal_setup("upd", decodeURIComponent(itemCode), decodeURIComponent(itemName), timeLimit, decodeURIComponent(CodeQuestion), decodeURIComponent(CodeAnswer))
            }

            function DeleteItemCode(nbr) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Are you sure?',
                    text: "Are you sure you want to Delete Itemcode ?",
                    type: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, Delete it!'

                }).then(function (result) {
                    if (result.value) {

                        $.ajax({
                            type: 'POST',
                            url: '../ItemCodeMaster/DeleteItem',
                            dataType: 'json',
                            data: { nbr: nbr, OPID: OP_UPD},
                            success: function (response) {
                                if (response.success == true) {

                                    Swal.fire({
                                        position: 'top-mid',
                                        icon: 'success',
                                        title: ("Delete  Item  success "),
                                        showConfirmButton: true,
                                        //   timer: 1700
                                    }).then(function (result) {

                                        MakeTable_ItemCode(ItemCateg)

                                    });

                                }
                            }
                        });

                    }
                })


            };


            $("#DDL_Category").on("change", function () {

                ItemCateg = $("#DDL_Category").val()
                debugger
                if (ItemCateg != 0) {
                    MakeTable_ItemCode(ItemCateg)
                    $("#LB_Name").text($("#DDL_Category option:selected").text());
                    $("#Table_Display").show();
                } else {
                    $("#Table_Display").hide();

                }
            });

            $("#DDL_CategoryType").on("change", function () {
                debugger
                ItemCategType = $("#DDL_CategoryType").val()
                $("#DDL_Category").empty();
                $("#Table_Display").hide();
                if (ItemCategType != 0) {  
                    GetExamCategory_(ItemCategType);  
                } else {
               
                    $("#Table_Display").hide();

                }
            });



            function GetExamCategory_(Category_Type) {

                $.ajax({
                    type: 'POST',
                    url: '../ItemCodeMaster/GetCategory',
                    dataType: 'json',
                    data: { ItemCategType: Category_Type},
                    success: function (respond) {
                        if (respond.length != 0) {
                            $.each(respond, function (i, div) {
                                $("#DDL_Category").append('<option value="' + div.value + '">' + div.text + '</option>');
                            });
                        }
                    },
                    error: function (ex) {
                        alert('Failed to retrieve states.' + ex);
                    }
                });
            }


            function GetExamCategory_Type() {
                $.ajax({
                    type: 'POST',
                    url: '../ItemCodeMaster/GetCategType',
                    dataType: 'json',
                    success: function (respond) {
                        if (respond.length != 0) {
                            $.each(respond, function (i, div) {
                                $("#DDL_CategoryType").append('<option value="' + div.value + '">' + div.text + '</option>');
                            });
                        }
                    },
                    error: function (ex) {
                        alert('Failed to retrieve states.' + ex);
                    }
                });
            }


        </script>


    }


</body>
</html>

